name: Bookstore API Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run tests against (test, demo ή κενό για test)'
        required: false
        default: ''
        type: choice
        options: ['', test, demo]

permissions:
  contents: read

jobs:
  test:
    name: Tests
    runs-on: ubuntu-latest

    concurrency:
      group: ci-${{ github.ref }}
      cancel-in-progress: true

    env:
      TEST_ENV: ${{ github.event.inputs.environment || 'test' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21 & Maven cache
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven

      - name: Run tests
        run: mvn --batch-mode clean test -Denv=${TEST_ENV}

      - name: Generate Allure result files (Maven plugin)
        if: always()
        run: mvn --batch-mode allure:report

      - name: Collect test artifacts
        if: always()
        run: |
          mkdir -p test-artifacts
          cp -r target/allure-results           test-artifacts/ || true
          cp -r target/site/allure-maven-plugin test-artifacts/allure-report || true
          cp -r target/surefire-reports         test-artifacts/ || true
          cp -r target/cucumber-report          test-artifacts/ || true

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ github.run_number }}-${{ github.run_attempt }}
          path: test-artifacts/
          retention-days: 30

  package-artifacts:
    needs: test
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: all-artifacts

      - name: Bundle ZIP
        run: |
          cd all-artifacts
          zip -r ../bookstore-test-artifacts-${{ github.run_number }}-${{ github.run_attempt }}.zip .
          cd ..

      - name: Upload bundle
        uses: actions/upload-artifact@v4
        with:
          name: bookstore-test-complete-${{ github.run_number }}-${{ github.run_attempt }}
          path: bookstore-test-artifacts-${{ github.run_number }}-${{ github.run_attempt }}.zip
          retention-days: 90

  allure-report:
    needs: test
    if: always() && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      # κατεβάζουμε τον κώδικα (main) – χρειάζεται για το workflow
      - name: Checkout repository
        uses: actions/checkout@v4

      # κατεβάζουμε τα artifacts με τα αποτελέσματα
      - name: Download test artifacts
        uses: actions/download-artifact@v4
        with:
          name: test-results-${{ github.run_number }}-${{ github.run_attempt }}
          path: artifacts

      # αντιγράφουμε τα allure-results εκεί που τα θέλει το action
      - name: Prepare Allure results directory
        run: |
          mkdir -p build/allure-results
          cp -r artifacts/allure-results/* build/allure-results/ || true

      # 🆕 δημιουργούμε κενό φάκελο 'gh-pages' ως history path
      - name: Create empty history folder
        run: mkdir -p gh-pages

      # χτίζουμε το report με simple-elf/allure-report-action
      - name: Build test report
        uses: simple-elf/allure-report-action@v1.7
        if: always()
        with:
          gh_pages: gh-pages
          allure_history: allure-history
          allure_results: build/allure-results

      # δημοσιεύουμε στο branch gh-pages (θα δημιουργηθεί orphan αν δεν υπάρχει)
      - name: Publish test report
        uses: peaceiris/actions-gh-pages@v3
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-history
          force_orphan: true

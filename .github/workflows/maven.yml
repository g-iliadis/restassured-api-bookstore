name: Bookstore API Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run tests against (test, demo or leave empty for test)'
        required: false
        default: ''
        type: choice
        options:
          - ''
          - test
          - demo

# Required permissions for the workflow
permissions:
  contents: write  # Needed for pushing to gh-pages branch
  pages: write     # Needed for GitHub Pages deployment
  id-token: write  # Needed for GitHub Pages deployment

jobs:
  test:
    name: Tests
    runs-on: ubuntu-latest

    concurrency:
      group: ci-${{ github.ref }}
      cancel-in-progress: true

    env:
      TEST_ENV: ${{ github.event.inputs.environment || 'test' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21 with Maven cache
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven

      - name: Run tests
        run: mvn --batch-mode clean test -Denv=${TEST_ENV}

      - name: Generate Allure report files
        if: always()
        run: mvn --batch-mode allure:report

      - name: Collect test artifacts
        if: always()
        run: |
          mkdir -p test-artifacts
          cp -r target/allure-results               test-artifacts/ || true
          cp -r target/site/allure-maven-plugin     test-artifacts/allure-report || true
          cp -r target/surefire-reports             test-artifacts/ || true
          cp -r target/cucumber-report              test-artifacts/ || true

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ github.run_number }}-${{ github.run_attempt }}
          path: test-artifacts/
          retention-days: 30

      - name: Add job summary
        if: always()
        run: |
          echo "## Test Execution Summary" >> $GITHUB_STEP_SUMMARY
          echo "- Environment: ${TEST_ENV}" >> $GITHUB_STEP_SUMMARY
          echo "- Java Version: 21" >> $GITHUB_STEP_SUMMARY
          echo "- Run Number: ${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
          echo "- Run Attempt: ${{ github.run_attempt }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Add link to Allure report (will be available after deployment)
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "ðŸ“Š [View Allure Report](https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/${{ github.run_number }}/)" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ -f target/surefire-reports/testng-results.xml ]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Test Statistics" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            grep -E "total|passed|failed|skipped" target/surefire-reports/testng-results.xml | head -5 >> $GITHUB_STEP_SUMMARY || echo "Could not extract test statistics" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
          fi

  package-artifacts:
    needs: test
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: all-artifacts

      - name: Bundle ZIP
        run: |
          cd all-artifacts
          zip -r ../bookstore-test-artifacts-${{ github.run_number }}-${{ github.run_attempt }}.zip .
          cd ..

      - name: Upload bundle
        uses: actions/upload-artifact@v4
        with:
          name: bookstore-test-complete-${{ github.run_number }}-${{ github.run_attempt }}
          path: bookstore-test-artifacts-${{ github.run_number }}-${{ github.run_attempt }}.zip
          retention-days: 90

  allure-report-gh-pages:
    needs: test
    if: always() && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    environment:
      name: github-pages
      url: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/${{ github.run_number }}/

    steps:
      - name: Download test artifacts
        uses: actions/download-artifact@v4
        with:
          name: test-results-${{ github.run_number }}-${{ github.run_attempt }}
          path: artifacts

      - name: Get Allure history
        uses: actions/checkout@v4
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Generate Allure Report
        uses: simple-elf/allure-report-action@master
        if: always()
        with:
          allure_results: artifacts/test-artifacts/allure-results
          gh_pages: gh-pages
          allure_report: allure-report
          allure_history: allure-history
          keep_reports: 20

      - name: Deploy report to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-history

  # Optional: Add PR comment with test results
  pr-comment:
    needs: test
    if: always() && github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write

    steps:
      - name: Comment PR with test results
        uses: actions/github-script@v7
        with:
          script: |
            const runNumber = '${{ github.run_number }}';
            const runId = '${{ github.run_id }}';
            
            const comment = `## ðŸ“Š Test Report Summary
            
            - **Environment**: ${{ env.TEST_ENV || 'test' }}
            - **Workflow Run**: [#${runNumber}](https://github.com/${{ github.repository }}/actions/runs/${runId})
            - **Artifacts**: [Download test results](https://github.com/${{ github.repository }}/actions/runs/${runId}#artifacts)
            
            _Full Allure report will be available on the main branch after merge._`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });